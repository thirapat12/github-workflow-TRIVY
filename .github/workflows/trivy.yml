name: CI/CD Trivy Flow

on:
  push:
    branches:
      - master

permissions:
  contents: read
  security-events: write
  # pull-requests: read
  actions: write

jobs:
        # - name: Checkout argocd-logo
        #   uses: actions/checkout@v4
        #   with:
        #     repository: thirapat12/argocd-logo
        #     ref: main
        #     path: argocd-logo
        # - name: Checkout argocd-logo
        #   uses: actions/checkout@v4
        #   with:
        #     repository: thirapat12/cv-profile
        #     ref: master
        #     path: cv-profile
        # - name: Install dependencies
        #   run: |
        #     ls -la
        #     npm install
        # - name: Run Trivy vulnerability scanner fs dependency into package-lock.json
        #   uses: aquasecurity/trivy-action@master
        #   with:
        #     scan-type: 'fs'
        #     scan-ref: '.'
        #     ignore-unfixed: true
        #     exit-code: '0'
        #     format: template
        #     template: '@/contrib/html.tpl'
        #     output: 'report-vuln-repositories.html'
        #     # format: 'table'
        #     # output: 'report-dependencies.json'
        #     severity: 'CRITICAL,HIGH,MEDIUM'

        # - name: upload result vuln into package-lock.json to zip
        #   uses: actions/upload-artifact@v2
        #   with:
        #     name: report-vuln-repositories
        #     path: 'report-vuln-repositories.html'    

        # - name: Run Trivy vulnerability scanner in repo mode
        #   uses: aquasecurity/trivy-action@master
        #   with:
        #     scan-type: 'fs'
        #     # scan-ref: 'package-lock.json'
        #     ignore-unfixed: true
        #     format: 'sarif'
        #     output: 'trivy-results.sarif'
        #     # template: '@/contrib/sarif.tpl'
        #     # output: 'trivy-results.sarif'
        #     # format: template
        #     # template: '@/contrib/html.tpl'
        #     # output: 'report-dependencies.html'
        #     # format: 'table'
        #     # output: 'report-dependencies.json'
        #     severity: 'CRITICAL,HIGH,MEDIUM'

        # - name: Upload Trivy scan results to GitHub Security tab 
        #   uses: github/codeql-action/upload-sarif@v3
        #   with:
        #     sarif_file: 'trivy-results.sarif'

  Maven:
    runs-on: ubuntu-latest      
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        
      - name: Setup oras
        uses: oras-project/setup-oras@v1

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Download and extract the vulnerability DB
        run: |
          mkdir -p $GITHUB_WORKSPACE/.cache/trivy/db
          oras pull ghcr.io/aquasecurity/trivy-db:2
          tar -xzf db.tar.gz -C $GITHUB_WORKSPACE/.cache/trivy/db
          rm db.tar.gz

      - name: Download and extract the Java DB
        run: |
          mkdir -p $GITHUB_WORKSPACE/.cache/trivy/java-db
          oras pull ghcr.io/aquasecurity/trivy-java-db:1
          tar -xzf javadb.tar.gz -C $GITHUB_WORKSPACE/.cache/trivy/java-db
          rm javadb.tar.gz

      - name: Cache DBs
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/.cache/trivy
          key: cache-trivy-${{ steps.date.outputs.date }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: thirapat12/thirapat12:${{ github.ref_name }}

      - name: Trivy vulnerability scanner image & export report to format template html
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: thirapat12/thirapat12:${{ github.ref_name }}
          format: template
          template: '@/contrib/html.tpl'
          output: thirapat12/thirapat12-${{ github.ref_name }}.html
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
        env:
          TRIVY_SKIP_DB_UPDATE: true
          TRIVY_SKIP_JAVA_DB_UPDATE: true

      - name: Upload Trivy scan results HTML
        uses: actions/upload-artifact@v4.3.6
        if: always()
        with:
          name: thirapat12/thirapat12-${{ github.ref_name }}
          path: thirapat12/thirapat12-${{ github.ref_name }}.html

      # - name: Run Trivy Scan
      #   uses: aquasecurity/trivy-action@master
      #   # env:
      #   #   TRIVY_DB_REPOSITORY: "db.tar.gz" # Replace with your custom DB URL
      #   with:
      #     output: trivy-report.json
      #     format: json
      #     scan-type: "fs"
      #     severity: "HIGH,CRITICAL"
      #     ignore-unfixed: true
      #     exit-code: "1"
      #   env:
      #     TRIVY_SKIP_DB_UPDATE: true
      #     TRIVY_SKIP_JAVA_DB_UPDATE: true

      # - name: Upload Vulnerability Scan Results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: trivy-report
      #     path: trivy-report.json
      
        # env:
        #   SHA: ${{ steps.short-sha.outputs.sha }}
      # - name: maven
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: 'temurin'
      #     java-version: '17'
      #     # java-version: ${{ inputs.unit-test-java-version }}
      #     cache: 'maven'

  # Trivy-image-scan:
  #   # needs: [Trivy-fs]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     # echo commitid sourcecode
  #     - uses: benjlevesque/short-sha@v2.2
  #       id: short-sha
  #       with:
  #         length: 7
  #     - run: echo $SHA
  #       env:
  #         SHA: ${{ steps.short-sha.outputs.sha }}
  #     - run: echo $SHA
  #       env:
  #         SHA: ${{ env.SHA }}

  #     - run: echo '${{ github.repository }}'

  #     - name: Convert repository name to lowercase
  #       run: echo "LOWER_REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

  #     - run: echo "${{ env.LOWER_REPO_NAME }}"

  #     - name: Login to Docker Hub Private Repository
  #       uses: docker/login-action@v3
  #       with:
  #         registry: docker.io
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: .
  #         push: false
  #         tags: thirapat12/thirapat12-${{ github.ref_name }}:${{ env.SHA }}
  #         cache-from: type=registry,ref=thirapat12/thirapat12-${{ github.ref_name }}:${{ env.SHA }}
  #         cache-to: type=inline

  #     - name: Trivy vulnerability scanner image & export report to format template html
  #       uses: aquasecurity/trivy-action@0.24.0
  #       with:
  #         image-ref: thirapat12/thirapat12-${{ github.ref_name }}:${{ env.SHA }}
  #         format: template
  #         template: '@/contrib/html.tpl'
  #         output: thirapat12/thirapat12-${{ github.ref_name }}-${{ env.SHA }}.html
  #         exit-code: '0'
  #         ignore-unfixed: true
  #         vuln-type: 'os,library'
  #         severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'

  #     - name: Upload Trivy scan results HTML
  #       uses: actions/upload-artifact@v4.3.6
  #       if: always()
  #       with:
  #         name: thirapat12/thirapat12-${{ github.ref_name }}-${{ env.SHA }}
  #         path: thirapat12/thirapat12-${{ github.ref_name }}-${{ env.SHA }}.html

  #     - name: Trivy vulnerability scanner image & export report to format template sarif 
  #       uses: aquasecurity/trivy-action@0.24.0
  #       with:
  #         image-ref: thirapat12/thirapat12-${{ github.ref_name }}:${{ env.SHA }}
  #         format: 'sarif'
  #         output: thirapat12/thirapat12-${{ github.ref_name }}-${{ env.SHA }}.sarif
  #         exit-code: '1'
  #         ignore-unfixed: true
  #         vuln-type: 'os,library'
  #         severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'

  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v3
  #       if: always()
  #       with:
  #         sarif_file: thirapat12/thirapat12-${{ github.ref_name }}-${{ env.SHA }}.sarif

  #     - name: Push image
  #       if: success()  # Only push the image if the previous steps succeeded
  #       uses: docker/build-push-action@v6
  #       with:
  #         push: true
  #         tags: thirapat12/thirapat12-${{ github.ref_name }}:${{ env.SHA }}
  #         cache-from: type=registry,ref=thirapat12/thirapat12-${{ github.ref_name }}:${{ env.SHA }}
  #         cache-to: type=inline

    #   # Trivy Scanner Image & export report to format template  
    #   - name: Run Trivy vulnerability scanner build image
    #     uses: aquasecurity/trivy-action@master
    #     with:
    #       # image-ref: 'thirapat12/thirapat12:${{ env.SHA }}'
    #       # format: 'table'
    #       input: /github/workspace/vuln-image.tar
    #       format: template
    #       template: '@/contrib/html.tpl'
    #       output: 'report-image-${{ env.SHA }}.html'
    #       exit-code: '0'
    #       ignore-unfixed: true
    #       vuln-type: 'os,library'
    #       severity: 'CRITICAL,HIGH,MEDIUM'

    #   - name: upload result vuln base image
    #     uses: actions/upload-artifact@v2
    #     with:
    #       name: report-vuln-image.json
    #       path: 'report-image-${{ env.SHA }}.html'

    #   # Trivy Scanner Image & export report to format template  
    #   - name: Run Trivy vulnerability scanner build image
    #     uses: aquasecurity/trivy-action@master
    #     with:
    #       # image-ref: 'thirapat12/thirapat12:${{ env.SHA }}'
    #       # format: 'table'
    #       input: /github/workspace/vuln-image.tar
    #       format: 'sarif'
    #     #   template: '@/contrib/html.tpl'
    #       output: 'report-image-${{ env.SHA }}.sarif'
    #       exit-code: '0'
    #       ignore-unfixed: true
    #       vuln-type: 'os,library'
    #       severity: 'CRITICAL,HIGH,MEDIUM'
          
    #   - name: Upload Trivy scan results to GitHub Security tab
    #     uses: github/codeql-action/upload-sarif@v2
    #     with:
    #       sarif_file: 'report-image-${{ env.SHA }}.sarif'

      # - name: Run Trivy vulnerability scanner to scan your private registry
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: 'thirapat12/thirapat12:${{ github.ref_name }}-${{ env.SHA }}'
      #     format: 'sarif'
      #     output: 'trivy-results-${{ env.SHA }}.sarif'
      #     ignore-unfixed: true
      #   env:
      #     TRIVY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      #     TRIVY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  
      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: 'trivy-results-${{ env.SHA }}.sarif'

#   trivy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#         - uses: aquasecurity/trivy-action@master
#           name: Run Trivy vulnerability scanner fs dependency into package-lock.json
#           with:
#             scan-type: 'fs'
#             scan-ref: 'package-lock.json'
#             ignore-unfixed: true
#             format: template
#             template: '@/contrib/html.tpl'
#             output: 'report-dependencies.html'
#             # format: 'table'
#             # output: 'report-dependencies.json'
#             severity: 'CRITICAL,HIGH,MEDIUM'
