name: Github Workflow CI/CD

on:
  pull_request:
    types:
      # - closed
      - opened
    branches:
      - master
      - features/**


jobs:
  build:
    # if: github.event.pull_request.merged == true
    name: Prepare Workflow
    runs-on: ubuntu-20.04
    steps:
    # checkout sourcecode
    - name: Checkout code
      uses: actions/checkout@v3
    # echo commitid sourcecode
    - uses: benjlevesque/short-sha@v2.2
      id: short-sha
      with:
        length: 7
    - run: echo $SHA
      env:
        SHA: ${{ steps.short-sha.outputs.sha }}
    - run: echo $SHA
      env:
        SHA: ${{ env.SHA }}
    # Prepare node version for install,build
    - name: Prepare node_modules
      uses: actions/setup-node@v2
      with:
        node-version: 10
    # command exec install
    - run: npm install
    # Trivy scan type fs file package-lock.json (nodejs)
    - name: Run Trivy vulnerability scanner fs dependency into package-lock.json
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'package-lock.json'
        ignore-unfixed: true
        format: template
        template: '@/contrib/html.tpl'
        output: 'report-dependencies-${{ env.SHA }}.html'
        # format: 'table'
        # output: 'report-dependencies.json'
        severity: 'CRITICAL,HIGH,MEDIUM'

    - name: upload result vuln into package-lock.json
      uses: actions/upload-artifact@v2
      with:
        name: report-vuln-packages-lock.json
        path: 'report-dependencies-${{ env.SHA }}.html'

    - name: Kaniko build
      uses: aevea/action-kaniko@master
      with:
        image: thirapat12/thirapat12
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        tag: ${{ env.SHA }}
        build_file: ./Dockerfile
        cache: true
        cache_registry: thirapat12/thirapat12

    - name: Login to Docker Hub Private Repository
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - run: |
        docker pull thirapat12/thirapat12:${{ env.SHA }}
        docker save -o vuln-image.tar thirapat12/thirapat12:${{ env.SHA }}
        echo ${{ env.SHA }} > version.txt
        ls -lrt
        cat version.txt

    # Trivy Scanner Image & export report to format template  
    - name: Run Trivy vulnerability scanner build image
      uses: aquasecurity/trivy-action@master
      with:
        # image-ref: 'thirapat12/thirapat12:${{ env.SHA }}'
        # format: 'table'
        input: /github/workspace/vuln-image.tar
        format: template
        template: '@/contrib/html.tpl'
        output: 'report-image-${{ env.SHA }}.html'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH,MEDIUM'

    - name: upload result vuln base image
      uses: actions/upload-artifact@v2
      with:
        name: report-vuln-image.json
        path: 'report-image-${{ env.SHA }}.html'

    - name: Run Trivy vulnerability scanner in IaC mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        format: template
        template: '@/contrib/html.tpl'
        output: 'report-config-${{ env.SHA }}.html'
        hide-progress: false
        # format: 'sarif'
        # output: 'trivy-results.sarif'
        exit-code: '0'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: upload result vuln IaC mode
      uses: actions/upload-artifact@v2
      with:
        name: report-vuln-config.json
        path: 'report-config-${{ env.SHA }}.html'

    # - name: Generate tarball from image
    #   run: |
    #     docker build -t ci:1.0.0 .
    #     docker save -o vuln-image.tar ci:1.0.0
    
    # - name: Run Trivy vulnerability scanner build image
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: 'ci:1.0.0'
    #     format: 'table'
    #     exit-code: '1'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH,MEDIUM'

    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: 'ci:1.0.0'
    #     format: 'sarif'
    #     output: 'trivy-results.sarif'
    #     exit-code: '1'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH,MEDIUM'

    # - name: Run Trivy vulnerability scanner in tarball mode
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     input: /github/workspace/vuln-image.tar
    #     format: 'sarif'
    #     output: 'trivy-image.sarif'
    #     severity: 'CRITICAL,HIGH'

    # - name: Upload Trivy scan results 1
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: 'trivy-dependencies.sarif'

    # - name: Upload Trivy scan results 2
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: 'trivy-image.sarif'

    # - name: upload result vul dependencies
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: report-vul-dependencies
    #     path: report-dependencies.json

    # - name: upload result vul image base
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: report-vul-image
    #     path: report-image.json

